---
name: WAU - Auto Create Pre-Release Version

on:
  schedule:
    - cron: "0 0 * * *"

permissions:
  contents: write

jobs:
  check_merged:
    name: Compare latest merge and tag
    runs-on: ubuntu-latest
    outputs:
      should_run: ${{ steps.should_run.outputs.SHOULD_RUN }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Check if latest merged is older than latest tag
        id: should_run
        run: |
          echo "Latest tag:"
          git log --tags --pretty="%ci - %h - %s %d" -n 1
          LATEST_TAG_DATE=$(git log --tags -n 1 --pretty="%ct")
          echo $LATEST_TAG_DATE

          echo "Latest merge:"
          git log --merges --pretty="%ci - %h - %s %d" -n 1
          LATEST_MERGE_DATE=$(git log --merges -n 1 --pretty="%ct")
          echo $LATEST_MERGE_DATE

          if [[ $LATEST_MERGE_DATE -gt $LATEST_TAG_DATE ]]; then
            echo "Latest tag is older than latest merge. Nightly will be created."
            echo "SHOULD_RUN=true" >> $GITHUB_OUTPUT
          else
            echo "Latest merge is not older than latest tag. No new release needed."
            echo "SHOULD_RUN=false" >> $GITHUB_OUTPUT
          fi

  build:
    name: Create Release Asset
    needs: [check_merged]
    if: ${{ needs.check_merged.outputs.should_run == 'true' }}
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          lfs: "true"
          fetch-depth: 0

      - name: Auto Increment Semver Action
        uses: reecetech/version-increment@71036b212bbdc100b48aae069870f10953433346 # 2023.10.2
        id: versioning
        with:
          scheme: semver
          increment: patch

      - name: Next Release Number
        id: WAU_version
        run: |
          echo "Next Release version: ${{ steps.versioning.outputs.v-version }}"

      - name: Build project
        shell: powershell
        run: |
          echo "### Get MDT from Microsoft ###"
          wget https://download.microsoft.com/download/3/3/9/339BE62D-B4B8-4956-B58D-73C4685FC492/MicrosoftDeploymentToolkit_x64.msi -UseBasicParsing -OutFile .\MicrosoftDeploymentToolkit_x64.msi
          Start-Process .\MicrosoftDeploymentToolkit_x64.msi -ArgumentList "/quiet /norestart" -Wait

          echo "### Duplicate WAU to WAU_x86 and WAU_x64"
          Copy-Item -Path ".\Sources\WAU" -Destination ".\Sources\WAU_x64" -Recurse -Force
          Copy-Item -Path ".\Sources\WAU" -Destination ".\Sources\WAU_x86" -Recurse -Force

          echo "### Copy ServiceUI.exe (x64/x86) to 'Sources/WAU_(x86/x64)/Winget-AutoUpdate' folders ###"
          Copy-Item -Path "C:\Program Files\Microsoft Deployment Toolkit\Templates\Distribution\Tools\x64\ServiceUI.exe" -Destination ".\Sources\WAU_x64\Winget-AutoUpdate\ServiceUI.exe" -Force
          Copy-Item -Path "C:\Program Files\Microsoft Deployment Toolkit\Templates\Distribution\Tools\x86\ServiceUI.exe" -Destination ".\Sources\WAU_x86\Winget-AutoUpdate\ServiceUI.exe" -Force

          echo "### Create WAU msi ###"
          .\Sources\Wix\Make_MSI.ps1 -Sources ".\Sources\WAU_x64\Winget-AutoUpdate" -OutputFolder ".\" -ProductVersion ${{ steps.versioning.outputs.v-version }} -NoX86
          .\Sources\Wix\Make_MSI.ps1 -Sources ".\Sources\WAU_x86\Winget-AutoUpdate" -OutputFolder ".\" -ProductVersion ${{ steps.versioning.outputs.v-version }} -NoX64
          
          echo "### Get file SHA ###"
          echo " - WAU_${{ steps.versioning.outputs.v-version }}_x86.msi:"
          Get-FileHash .\WAU_${{ steps.versioning.outputs.v-version }}_x86.msi | select Algorithm, Hash | ft -HideTableHeaders
          echo " - WAU_${{ steps.versioning.outputs.v-version }}_x64.msi:"
          Get-FileHash .\WAU_${{ steps.versioning.outputs.v-version }}_x64.msi | select Algorithm, Hash | ft -HideTableHeaders
          
          echo "### Zip ADMX ###"
          Compress-Archive -Path .\Sources\Policies\ADMX -DestinationPath .\WAU_ADMX.zip -Force

          echo "### Create install counter file ###"
          echo "Install counter file." > WAU_InstallCounter
          
      - name: Create release
        uses: ncipollo/release-action@2c591bcc8ecdcd2db72b97d6147f871fcd833ba5 # v1.14.0
        id: release
        with:
          tag: "v${{ steps.versioning.outputs.v-version }}"
          prerelease: true
          generateReleaseNotes: true
          name: "v${{ steps.versioning.outputs.v-version }} [Nightly Build]"
          artifacts: "WAU_${{ steps.versioning.outputs.v-version }}_x86.msi,WAU_${{ steps.versioning.outputs.v-version }}_x64.msi,WAU_ADMX.zip,WAU_InstallCounter"

      - name: URL to release
        run: echo "Release -> ${{ steps.release.outputs.html_url }}"
